created: 20160524140701743
modified: 20160524140741729
tags: Snippets
title: Config Files
type: text/vnd.tiddlywiki

! Spacemacs

```lisp
(defun dotspacemacs/user-config ()
  "Configuration function for user code.
This function is called at the very end of Spacemacs initialization after
layers configuration. You are free to put any user code."
  ;; Clojure
  ;; Pretty symbols for anonymous functions, set literals and partial functions
  (setq clojure-enable-fancify-symbols t)

  ;; Use evil-paredit mode in clojure, still got some problems
  ;; (add-hook 'emacs-lisp-mode-hook 'evil-paredit-mode)

  ;; huaihai's configuration
  ;; Make evil-mode up/down operate in screen lines instead of logical lines
  (define-key evil-motion-state-map "j" 'evil-next-visual-line)
  (define-key evil-motion-state-map "k" 'evil-previous-visual-line)
  ;; Also in visual mode
  (define-key evil-visual-state-map "j" 'evil-next-visual-line)
  (define-key evil-visual-state-map "k" 'evil-previous-visual-line)
  ;; clojure mode config
  ;(require 'clojure-mode-extra-font-locking)
  (add-hook 'clojure-mode-hook #'smartparens-strict-mode)
  (add-hook 'clojure-mode-hook #'evil-smartparens-mode)
  (add-hook 'clojure-mode-hook #'rainbow-delimiters-mode)

  ;; remove trailing whitespace when saving
  (add-hook 'before-save-hook 'delete-trailing-whitespace)
  ;; toggle comments
  (define-key evil-normal-state-map ",c " " cl")
  ;; match paredit.vim key-binding
  (define-key evil-normal-state-map ",W" " kw")  ; wrap with ()
  (define-key evil-normal-state-map ",w["        ; wrap with []
    (lambda (&optional arg) (interactive "P") (sp-wrap-with-pair "[")))
  (define-key evil-normal-state-map ",w{"        ; wrap with {}
    (lambda (&optional arg) (interactive "P") (sp-wrap-with-pair "{")))
  (define-key evil-normal-state-map ",S" " kW")  ; splice, i.e unwrap an sexp
  (define-key evil-normal-state-map ",J" " kJ")  ; join two sexps
  (define-key evil-normal-state-map ",O" 'sp-split-sexp) ; split an sexp
  (define-key evil-normal-state-map ",I" " kr")  ; raise current symbol
  (define-key evil-normal-state-map (kbd ", <up>") " kE") ; splice kill backward
  (define-key evil-normal-state-map (kbd ", <down>") " ke") ; forward
  ;; These are different from vim, here cursor should NOT be on delimits
  (define-key evil-normal-state-map ",>" " ks")  ; forward slurp
  (define-key evil-normal-state-map ",<" " kS")  ; backward slurp

  ;; jr0cket: keybindings for cycling buffers
  (global-set-key [C-prior] 'previous-buffer)
  (global-set-key [C-next] 'next-buffer)

  ;; Remap undo to overwrite the Emacs GUI window hide key
  ;; as the backslash character is used to escape in Emacs, we need to escape it with another backslash
  (define-key global-map (kbd "C-\\") 'undo-tree-undo)
  (define-key global-map (kbd "M-\\") 'undo-tree-redo)
  )

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
```